# Symlink to ~/.config/aerospace/aerospace.toml

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical =   8
outer.left =       8
outer.bottom =     8
outer.top =        8
outer.right =      8

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-m = 'workspace main'
alt-a = 'workspace ai'
alt-c = 'workspace chat'
alt-n = 'workspace note'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-m = 'move-node-to-workspace main'
alt-shift-a = 'move-node-to-workspace ai'
alt-shift-c = 'move-node-to-workspace chat'
alt-shift-n = 'move-node-to-workspace note'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-p = 'focus-back-and-forth'

alt-space = 'fullscreen'
# Quickly open a new kitty window
alt-enter = 'exec-and-forget osascript $DOTFILES/system/aerospace/scripts/open_new_kitty_window.scpt'
# Quickly open a new Arc window
alt-shift-enter = 'exec-and-forget osascript $DOTFILES/system/aerospace/scripts/open_new_arc_window.scpt'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-w = 'mode window'
alt-shift-w = 'mode window-sticky'
alt-r = 'mode resize'

[mode.window.binding]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
backspace = ['close-all-windows-but-current', 'mode main']

a = ['layout accordion horizontal vertical', 'mode main']
f = ['layout floating tiling', 'mode main']
t = ['layout tiles horizontal vertical', 'mode main']

esc = 'mode main'

# Same as window, but doesn't exit the main mode after every key
# Useful for rearanging multiple windows
[mode.window-sticky.binding]
r = ['flatten-workspace-tree'] # reset layout

h = ['focus left']
j = ['focus down']
k = ['focus up']
l = ['focus right']

shift-h = ['move left']
shift-j = ['move down']
shift-k = ['move up']
shift-l = ['move right']

alt-shift-h = ['join-with left']
alt-shift-j = ['join-with down']
alt-shift-k = ['join-with up']
alt-shift-l = ['join-with right']

a = ['layout accordion horizontal vertical']
f = ['layout floating tiling']
t = ['layout tiles horizontal vertical']

esc = 'mode main'

[mode.resize.binding]
j = 'resize smart -100'
k = 'resize smart +100'
equal = ['balance-sizes', 'mode main']
esc = 'mode main'

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.QuickTimePlayerX'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'xyz.chatboxapp.app'
run = ['move-node-to-workspace ai']

[[on-window-detected]]
if.app-name-regex-substring = 'Perplexity'
run = ['move-node-to-workspace ai']

[[on-window-detected]]
if.app-name-regex-substring = 'Jira'
run = ['move-node-to-workspace chat']

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = ['move-node-to-workspace chat']

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace chat']

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = ['layout floating', 'move-node-to-workspace chat']

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['move-node-to-workspace note']

[exec.env-vars]
DOTFILES = '${HOME}/.dotfiles'
PATH='/opt/homebrew/bin:${PATH}'
